public List<String> commonChars(List<String> strs){    
    // Initialize frequency map with max values for each character a-z
    Map<String, Integer> minFreq = new Map<String, Integer>();
    for (Integer i = 0; i < 26; i++) {
        String ch = String.fromCharArray(new List<Integer>{97 + i});
        minFreq.put(ch, Integer.MAX_VALUE);
    }

    // For each string, count character frequencies
    for (String str : strs) {
        Map<String, Integer> freq = new Map<String, Integer>();
        for (Integer i = 0; i < str.length(); i++) {
            String ch = str.substring(i, i + 1);
            freq.put(ch, freq.containsKey(ch) ? freq.get(ch) + 1 : 1);
        }

        // Update min frequency map
        for (String ch : minFreq.keySet()) {
            Integer count = freq.containsKey(ch) ? freq.get(ch) : 0;
            minFreq.put(ch, Math.min(minFreq.get(ch), count));
        }
    }

    // Build result list based on min frequencies
    List<String> result = new List<String>();
    for (String ch : minFreq.keySet()) {
        Integer count = minFreq.get(ch);
        for (Integer i = 0; i < count; i++) {
            result.add(ch);
        }
    }

    return result;
}
